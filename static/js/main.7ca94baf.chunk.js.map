{"version":3,"sources":["utils/localStorage.js","shared/services/people.js","utils/idGenerator.js","store/people/actions.js","store/people/reducer.js","shared/services/gifts.js","store/gifts/actions.js","store/gifts/reducer.js","store/rootReducer.js","store/store.js","shared/components/Input/Input.jsx","screens/Gift/Gift.jsx","shared/components/Button/Button.jsx","shared/components/PersonCard/PersonCard.jsx","shared/components/PeopleList/PeopleList.jsx","screens/Wishlist/Wishlist.jsx","App.jsx","index.jsx"],"names":["saveItemInLocalStorage","key","value","valueStringified","JSON","stringify","localStorage","setItem","getItemFromLocalStorage","getItem","parse","PEOPLE_KEY","setPeopleInLocalStorage","newPeople","generateId","id","Date","getTime","ADD_PERSON","UPDATE_PERSON_NAME","DELETE_PERSON_CARD","initialState","peopleReducer","state","action","type","newPerson","name","payload","personId","newPersons","updatedPerson","personName","personToUpdateIndex","findIndex","person","peopleWithoutDeletePerson","filter","GIFTS_KEY","setGiftsInLocalStorage","newGifts","ADD_GIFT","EDIT_GIFT","DELETE_GIFT","DELETE_PERSON_GIFTS","giftsReducer","newGift","giftId","newPersonGifts","gifts","giftName","updatedGift","giftToUpdateIndex","gift","newState","rootReducer","combineReducers","people","store","createStore","composeWithDevTools","Input","className","inputRef","placeholder","onChange","onBlur","ref","defaultProps","Gift","useState","setGiftName","dispatch","useDispatch","textInput","useRef","useEffect","current","focus","editGift","event","target","icon","faTrash","onClick","deleteGift","Button","text","PersonCard","personGifts","setPersonName","updatePersonName","map","deletePersonCard","deletePersonGifts","addGift","PeopleList","useSelector","Wishlist","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ca94baf.chunk.js","sourcesContent":["export function saveItemInLocalStorage(key, value) {\n  const valueStringified = JSON.stringify(value);\n  localStorage.setItem(key, valueStringified);\n}\n\nexport function getItemFromLocalStorage(key) {\n  const value = localStorage.getItem(key);\n  return JSON.parse(value);\n}\n","import {\n  getItemFromLocalStorage,\n  saveItemInLocalStorage,\n} from 'utils/localStorage';\n\nconst PEOPLE_KEY = 'people';\n\nexport const getPeopleFromLocalStorage = () => {\n  const people = getItemFromLocalStorage(PEOPLE_KEY) || [];\n  return people;\n};\n\nexport const setPeopleInLocalStorage = (newPeople) => {\n  const people = saveItemInLocalStorage(PEOPLE_KEY, newPeople);\n  return people;\n};\n","export default function generateId(key) {\n  const id = new Date().getTime();\n  return `${key}-${id}`;\n}\n","export const ADD_PERSON = 'ADD_PERSON';\nexport const UPDATE_PERSON_NAME = 'UPDATE_PERSON_NAME';\nexport const EDIT_PERSON_NAME = 'EDIT_PERSON_NAME';\nexport const DELETE_PERSON_CARD = 'DELETE_PERSON_CARD';\n\nexport const addPerson = () => ({\n  type: ADD_PERSON,\n});\n\nexport const updatePersonName = (personName, personId) => ({\n  type: UPDATE_PERSON_NAME,\n  payload: { personName, personId },\n});\n\nexport const deletePersonCard = (personId) => ({\n  type: DELETE_PERSON_CARD,\n  payload: { personId },\n});\n","import {\n  getPeopleFromLocalStorage,\n  setPeopleInLocalStorage,\n} from 'shared/services/people';\nimport generateId from '../../utils/idGenerator';\n\nimport { ADD_PERSON, UPDATE_PERSON_NAME, DELETE_PERSON_CARD } from './actions';\n\nconst initialState = getPeopleFromLocalStorage();\n\nfunction peopleReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_PERSON: {\n      const newPerson = {\n        name: action.payload,\n        personId: generateId('person'),\n      };\n      const newPersons = [...state, newPerson];\n      setPeopleInLocalStorage(newPersons);\n      return newPersons;\n    }\n    case UPDATE_PERSON_NAME: {\n      const updatedPerson = {\n        personName: action.payload.personName,\n        personId: action.payload.personId,\n      };\n      const personToUpdateIndex = state.findIndex(\n        (person) => person.personId === action.payload.personId,\n      );\n      const newPersons = [...state];\n      newPersons[personToUpdateIndex] = updatedPerson;\n      setPeopleInLocalStorage(newPersons);\n      return newPersons;\n    }\n    case DELETE_PERSON_CARD: {\n      const peopleWithoutDeletePerson = state.filter(\n        (person) => person.personId !== action.payload.personId,\n      );\n      setPeopleInLocalStorage(peopleWithoutDeletePerson);\n      return peopleWithoutDeletePerson;\n    }\n    default:\n      return state;\n  }\n}\n\nexport default peopleReducer;\n","import {\n  getItemFromLocalStorage,\n  saveItemInLocalStorage,\n} from 'utils/localStorage';\n\nconst GIFTS_KEY = 'gifts';\n\nexport const getGiftsFromLocalStorage = () => {\n  const gifts = getItemFromLocalStorage(GIFTS_KEY) || {};\n  return gifts;\n};\n\nexport const setGiftsInLocalStorage = (newGifts) => {\n  const gifts = saveItemInLocalStorage(GIFTS_KEY, newGifts);\n  return gifts;\n};\n","export const ADD_GIFT = 'ADD_GIFT';\nexport const EDIT_GIFT = 'EDIT_GIFT';\nexport const DELETE_GIFT = 'DELETE_GIFT';\nexport const DELETE_PERSON_GIFTS = 'DELETE_PERSON_GIFTS';\n\nexport const addGift = (personId) => ({\n  type: ADD_GIFT,\n  payload: { personId },\n});\n\nexport const editGift = (giftId, giftName, personId) => ({\n  type: EDIT_GIFT,\n  payload: { giftId, giftName, personId },\n});\n\nexport const deleteGift = (giftId, personId) => ({\n  type: DELETE_GIFT,\n  payload: { giftId, personId },\n});\n\nexport const deletePersonGifts = (personId) => ({\n  type: DELETE_PERSON_GIFTS,\n  payload: { personId },\n});\n","import {\n  getGiftsFromLocalStorage,\n  setGiftsInLocalStorage,\n} from 'shared/services/gifts';\n\nimport generateId from 'utils/idGenerator';\n\nimport {\n  DELETE_GIFT,\n  EDIT_GIFT,\n  ADD_GIFT,\n  DELETE_PERSON_GIFTS,\n} from './actions';\n\nconst initialState = getGiftsFromLocalStorage();\n\nfunction giftsReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_GIFT: {\n      const { personId } = action.payload;\n      const newGift = {\n        giftId: generateId('gift'),\n      };\n      const newPersonGifts = state[personId]\n        ? [...state[personId], newGift]\n        : [newGift];\n      const gifts = { ...state, [personId]: newPersonGifts };\n      setGiftsInLocalStorage(gifts);\n      return gifts;\n    }\n    case EDIT_GIFT: {\n      const { personId, giftId, giftName } = action.payload;\n      const updatedGift = {\n        giftId,\n        giftName,\n      };\n      const giftToUpdateIndex = state[personId].findIndex(\n        (gift) => gift.giftId === giftId,\n      );\n      const newGifts = state[personId];\n      newGifts[giftToUpdateIndex] = updatedGift;\n      setGiftsInLocalStorage(state);\n      return state;\n    }\n    case DELETE_GIFT: {\n      const { personId, giftId } = action.payload;\n      const newPersonGifts = state[personId].filter(\n        (gift) => gift.giftId !== giftId,\n      );\n      const newGifts = { ...state, [personId]: newPersonGifts };\n      setGiftsInLocalStorage(newGifts);\n      return newGifts;\n    }\n    case DELETE_PERSON_GIFTS: {\n      const { personId } = action.payload;\n      const { [personId]: _, ...newState } = state;\n      setGiftsInLocalStorage(newState);\n      return newState;\n    }\n    default:\n      return state;\n  }\n}\n\nexport default giftsReducer;\n","import { combineReducers } from 'redux';\nimport peopleReducer from './people/reducer';\nimport giftsReducer from './gifts/reducer';\n\nconst rootReducer = combineReducers({\n  people: peopleReducer,\n  gifts: giftsReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './rootReducer';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Input({\n  value,\n  className,\n  inputRef,\n  placeholder,\n  onChange,\n  type,\n  onBlur,\n}) {\n  return (\n    <input\n      className={className}\n      placeholder={placeholder}\n      value={value}\n      type={type}\n      onChange={onChange}\n      ref={inputRef}\n      onBlur={onBlur}\n    />\n  );\n}\nInput.propTypes = {\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  inputRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(HTMLInputElement) }),\n  ]),\n};\n\nInput.defaultProps = {\n  className: '',\n  placeholder: '',\n  onChange: '',\n  onBlur: () => {},\n  inputRef: () => {},\n};\n\nexport default Input;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { deleteGift, editGift } from 'store/gifts/actions';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport Input from 'shared/components/Input/Input';\n// import Button from 'shared/components/Button/Button';\n\nimport './styles.scss';\n\nfunction Gift({ personId, giftId, giftName }) {\n  const [name, setGiftName] = useState(giftName);\n\n  const dispatch = useDispatch();\n\n  const textInput = useRef();\n\n  useEffect(() => {\n    textInput.current.focus();\n  }, []);\n\n  function handleGiftNameChange(event) {\n    setGiftName(event.target.value);\n  }\n\n  function updateGift() {\n    dispatch(editGift(giftId, name, personId));\n  }\n\n  function removeGift() {\n    dispatch(deleteGift(giftId, personId));\n  }\n\n  return (\n    <div className=\"gift\">\n      <Input\n        inputRef={textInput}\n        value={name}\n        type=\"input\"\n        onBlur={updateGift}\n        onChange={handleGiftNameChange}\n        placeholder=\"Write gift\"\n        className=\"gift__input-name\"\n      />\n      <div className=\"gift__icon\">\n        <FontAwesomeIcon icon={faTrash} onClick={removeGift} />\n      </div>\n    </div>\n  );\n}\n\nGift.propTypes = {\n  giftId: PropTypes.string.isRequired,\n  personId: PropTypes.string,\n  giftName: PropTypes.string,\n};\n\nGift.defaultProps = {\n  personId: '',\n  giftName: '',\n};\n\nexport default Gift;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Button({ onClick, className, text }) {\n  return (\n    <button onClick={onClick} type=\"button\" className={className}>\n      {text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string,\n};\n\nButton.defaultProps = {\n  className: '',\n  text: '',\n};\n\nexport default Button;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updatePersonName, deletePersonCard } from 'store/people/actions';\nimport { addGift, deletePersonGifts } from 'store/gifts/actions';\nimport PropTypes from 'prop-types';\n\nimport Gift from 'screens/Gift/Gift';\nimport Input from '../Input/Input';\nimport Button from '../Button/Button';\n\nimport './styles.scss';\n\nfunction PersonCard({ personGifts, personId, personName }) {\n  const dispatch = useDispatch();\n\n  const [name, setPersonName] = useState(personName);\n\n  const textInput = useRef();\n\n  useEffect(() => {\n    textInput.current.focus();\n  }, []);\n\n  function handlePersonNameChange(event) {\n    setPersonName(event.target.value);\n  }\n\n  function editPersonName() {\n    dispatch(updatePersonName(name, personId));\n  }\n\n  function deletePerson() {\n    dispatch(deletePersonCard(personId));\n    dispatch(deletePersonGifts(personId));\n  }\n\n  function addPersonGift() {\n    dispatch(addGift(personId));\n  }\n\n  return (\n    <main className=\"person-card\">\n      <div className=\"person-card__name\">\n        <Input\n          inputRef={textInput}\n          onChange={handlePersonNameChange}\n          onBlur={editPersonName}\n          value={name}\n          placeholder=\"Write name\"\n          type=\"input\"\n          className=\"person-card__input\"\n        />\n      </div>\n      <span className=\"person-card__gifts-list\">\n        {personGifts ? (\n          personGifts.map(({ giftId, giftName }) => (\n            <Gift\n              key={giftId}\n              giftName={giftName}\n              personId={personId}\n              giftId={giftId}\n            />\n          ))\n        ) : (\n          <p>You dont have any gifts</p>\n        )}\n      </span>\n      <div className=\"person-card__navigation-buttons\">\n        <Button\n          onClick={deletePerson}\n          className=\"person-card__button-delete-person\"\n          type=\"button\"\n          text=\"Delete list\"\n        />\n        <Button\n          onClick={addPersonGift}\n          type=\"button\"\n          text=\"Add gift wish\"\n          className=\"person-card_button-add-gitf\"\n        />\n      </div>\n    </main>\n  );\n}\n\nPersonCard.propTypes = {\n  personId: PropTypes.string.isRequired,\n  personName: PropTypes.string,\n  personGifts: PropTypes.arrayOf(\n    PropTypes.shape({\n      giftId: PropTypes.string,\n      giftName: PropTypes.string,\n    }),\n  ),\n};\n\nPersonCard.defaultProps = {\n  personName: '',\n  personGifts: [],\n};\n\nexport default PersonCard;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPerson } from '../../../store/people/actions';\n\nimport PersonCard from '../PersonCard/PersonCard';\nimport Button from '../Button/Button';\n\nimport './styles.scss';\n\nfunction PeopleList() {\n  const dispatch = useDispatch();\n  const people = useSelector((state) => state.people);\n  const gifts = useSelector((state) => state.gifts);\n\n  function addNewPerson() {\n    dispatch(addPerson());\n  }\n\n  return (\n    <div className=\"people-card\">\n      <Button\n        onClick={addNewPerson}\n        className=\"people-card__button-add-person\"\n        text=\"Add Person\"\n      />\n      <div className=\"people-card__people-list\">\n        {people.map(({ personName, personId }) => (\n          <PersonCard\n            personGifts={gifts[personId] || []}\n            key={personId}\n            personId={personId}\n            personName={personName}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default PeopleList;\n","import React from 'react';\n\nimport PeopleList from '../../shared/components/PeopleList/PeopleList';\n\nimport './styles.scss';\n\nfunction Wishlist() {\n  return (\n    <div className=\"card\">\n      <header className=\"card__header\">\n        <h1>\n          wish\n          <span>.</span>\n          <span>ly</span>\n        </h1>\n      </header>\n      <main className=\"card_main\">\n        <PeopleList />\n      </main>\n    </div>\n  );\n}\n\nexport default Wishlist;\n","import React from 'react';\n\nimport './App.scss';\n\nimport Wishlist from './screens/Wishlist/Wishlist';\n\nfunction App() {\n  return <Wishlist />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store/store';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}